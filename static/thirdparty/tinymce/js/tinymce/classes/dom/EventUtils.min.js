
define("tinymce/dom/EventUtils",[],function(){"use strict";var eventExpandoPrefix="mce-data-";var mouseEventRe=/^(?:mouse|contextmenu)|click/;var deprecated={keyLocation:1,layerX:1,layerY:1,returnValue:1};function addEvent(target,name,callback,capture){if(target.addEventListener){target.addEventListener(name,callback,capture||false);}else if(target.attachEvent){target.attachEvent('on'+name,callback);}}
function removeEvent(target,name,callback,capture){if(target.removeEventListener){target.removeEventListener(name,callback,capture||false);}else if(target.detachEvent){target.detachEvent('on'+name,callback);}}
function fix(originalEvent,data){var name,event=data||{},undef;function returnFalse(){return false;}
function returnTrue(){return true;}
for(name in originalEvent){if(!deprecated[name]){event[name]=originalEvent[name];}}
if(!event.target){event.target=event.srcElement||document;}
if(originalEvent&&mouseEventRe.test(originalEvent.type)&&originalEvent.pageX===undef&&originalEvent.clientX!==undef){var eventDoc=event.target.ownerDocument||document;var doc=eventDoc.documentElement;var body=eventDoc.body;event.pageX=originalEvent.clientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-
(doc&&doc.clientLeft||body&&body.clientLeft||0);event.pageY=originalEvent.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||0)-
(doc&&doc.clientTop||body&&body.clientTop||0);}
event.preventDefault=function(){event.isDefaultPrevented=returnTrue;if(originalEvent){if(originalEvent.preventDefault){originalEvent.preventDefault();}else{originalEvent.returnValue=false;}}};event.stopPropagation=function(){event.isPropagationStopped=returnTrue;if(originalEvent){if(originalEvent.stopPropagation){originalEvent.stopPropagation();}else{originalEvent.cancelBubble=true;}}};event.stopImmediatePropagation=function(){event.isImmediatePropagationStopped=returnTrue;event.stopPropagation();};if(!event.isDefaultPrevented){event.isDefaultPrevented=returnFalse;event.isPropagationStopped=returnFalse;event.isImmediatePropagationStopped=returnFalse;}
return event;}
function bindOnReady(win,callback,eventUtils){var doc=win.document,event={type:'ready'};if(eventUtils.domLoaded){callback(event);return;}
function readyHandler(){if(!eventUtils.domLoaded){eventUtils.domLoaded=true;callback(event);}}
function waitForDomLoaded(){if(doc.readyState==="complete"||(doc.readyState==="interactive"&&doc.body)){removeEvent(doc,"readystatechange",waitForDomLoaded);readyHandler();}}
function tryScroll(){try{doc.documentElement.doScroll("left");}catch(ex){setTimeout(tryScroll,0);return;}
readyHandler();}
if(doc.addEventListener){if(doc.readyState==="complete"){readyHandler();}else{addEvent(win,'DOMContentLoaded',readyHandler);}}else{addEvent(doc,"readystatechange",waitForDomLoaded);if(doc.documentElement.doScroll&&win.self===win.top){tryScroll();}}
addEvent(win,'load',readyHandler);}
function EventUtils(){var self=this,events={},count,expando,hasFocusIn,hasMouseEnterLeave,mouseEnterLeave;expando=eventExpandoPrefix+(+new Date()).toString(32);hasMouseEnterLeave="onmouseenter"in document.documentElement;hasFocusIn="onfocusin"in document.documentElement;mouseEnterLeave={mouseenter:'mouseover',mouseleave:'mouseout'};count=1;self.domLoaded=false;self.events=events;function executeHandlers(evt,id){var callbackList,i,l,callback,container=events[id];callbackList=container&&container[evt.type];if(callbackList){for(i=0,l=callbackList.length;i<l;i++){callback=callbackList[i];if(callback&&callback.func.call(callback.scope,evt)===false){evt.preventDefault();}
if(evt.isImmediatePropagationStopped()){return;}}}}
self.bind=function(target,names,callback,scope){var id,callbackList,i,name,fakeName,nativeHandler,capture,win=window;function defaultNativeHandler(evt){executeHandlers(fix(evt||win.event),id);}
if(!target||target.nodeType===3||target.nodeType===8){return;}
if(!target[expando]){id=count++;target[expando]=id;events[id]={};}else{id=target[expando];}
scope=scope||target;names=names.split(' ');i=names.length;while(i--){name=names[i];nativeHandler=defaultNativeHandler;fakeName=capture=false;if(name==="DOMContentLoaded"){name="ready";}
if(self.domLoaded&&name==="ready"&&target.readyState=='complete'){callback.call(scope,fix({type:name}));continue;}
if(!hasMouseEnterLeave){fakeName=mouseEnterLeave[name];if(fakeName){nativeHandler=function(evt){var current,related;current=evt.currentTarget;related=evt.relatedTarget;if(related&&current.contains){related=current.contains(related);}else{while(related&&related!==current){related=related.parentNode;}}
if(!related){evt=fix(evt||win.event);evt.type=evt.type==='mouseout'?'mouseleave':'mouseenter';evt.target=current;executeHandlers(evt,id);}};}}
if(!hasFocusIn&&(name==="focusin"||name==="focusout")){capture=true;fakeName=name==="focusin"?"focus":"blur";nativeHandler=function(evt){evt=fix(evt||win.event);evt.type=evt.type==='focus'?'focusin':'focusout';executeHandlers(evt,id);};}
callbackList=events[id][name];if(!callbackList){events[id][name]=callbackList=[{func:callback,scope:scope}];callbackList.fakeName=fakeName;callbackList.capture=capture;callbackList.nativeHandler=nativeHandler;if(name==="ready"){bindOnReady(target,nativeHandler,self);}else{addEvent(target,fakeName||name,nativeHandler,capture);}}else{if(name==="ready"&&self.domLoaded){callback({type:name});}else{callbackList.push({func:callback,scope:scope});}}}
target=callbackList=0;return callback;};self.unbind=function(target,names,callback){var id,callbackList,i,ci,name,eventMap;if(!target||target.nodeType===3||target.nodeType===8){return self;}
id=target[expando];if(id){eventMap=events[id];if(names){names=names.split(' ');i=names.length;while(i--){name=names[i];callbackList=eventMap[name];if(callbackList){if(callback){ci=callbackList.length;while(ci--){if(callbackList[ci].func===callback){var nativeHandler=callbackList.nativeHandler;var fakeName=callbackList.fakeName,capture=callbackList.capture;callbackList=callbackList.slice(0,ci).concat(callbackList.slice(ci+1));callbackList.nativeHandler=nativeHandler;callbackList.fakeName=fakeName;callbackList.capture=capture;eventMap[name]=callbackList;}}}
if(!callback||callbackList.length===0){delete eventMap[name];removeEvent(target,callbackList.fakeName||name,callbackList.nativeHandler,callbackList.capture);}}}}else{for(name in eventMap){callbackList=eventMap[name];removeEvent(target,callbackList.fakeName||name,callbackList.nativeHandler,callbackList.capture);}
eventMap={};}
for(name in eventMap){return self;}
delete events[id];try{delete target[expando];}catch(ex){target[expando]=null;}}
return self;};self.fire=function(target,name,args){var id;if(!target||target.nodeType===3||target.nodeType===8){return self;}
args=fix(null,args);args.type=name;args.target=target;do{id=target[expando];if(id){executeHandlers(args,id);}
target=target.parentNode||target.ownerDocument||target.defaultView||target.parentWindow;}while(target&&!args.isPropagationStopped());return self;};self.clean=function(target){var i,children,unbind=self.unbind;if(!target||target.nodeType===3||target.nodeType===8){return self;}
if(target[expando]){unbind(target);}
if(!target.getElementsByTagName){target=target.document;}
if(target&&target.getElementsByTagName){unbind(target);children=target.getElementsByTagName('*');i=children.length;while(i--){target=children[i];if(target[expando]){unbind(target);}}}
return self;};self.destroy=function(){events={};};self.cancel=function(e){if(e){e.preventDefault();e.stopImmediatePropagation();}
return false;};}
EventUtils.Event=new EventUtils();EventUtils.Event.bind(window,'ready',function(){});return EventUtils;});