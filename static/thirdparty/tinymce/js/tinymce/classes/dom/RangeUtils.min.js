
define("tinymce/dom/RangeUtils",["tinymce/util/Tools","tinymce/dom/TreeWalker"],function(Tools,TreeWalker){var each=Tools.each;function getEndChild(container,index){var childNodes=container.childNodes;index--;if(index>childNodes.length-1){index=childNodes.length-1;}else if(index<0){index=0;}
return childNodes[index]||container;}
function RangeUtils(dom){this.walk=function(rng,callback){var startContainer=rng.startContainer,startOffset=rng.startOffset,endContainer=rng.endContainer,endOffset=rng.endOffset,ancestor,startPoint,endPoint,node,parent,siblings,nodes;nodes=dom.select('td.mce-item-selected,th.mce-item-selected');if(nodes.length>0){each(nodes,function(node){callback([node]);});return;}
function exclude(nodes){var node;node=nodes[0];if(node.nodeType===3&&node===startContainer&&startOffset>=node.nodeValue.length){nodes.splice(0,1);}
node=nodes[nodes.length-1];if(endOffset===0&&nodes.length>0&&node===endContainer&&node.nodeType===3){nodes.splice(nodes.length-1,1);}
return nodes;}
function collectSiblings(node,name,end_node){var siblings=[];for(;node&&node!=end_node;node=node[name]){siblings.push(node);}
return siblings;}
function findEndPoint(node,root){do{if(node.parentNode==root){return node;}
node=node.parentNode;}while(node);}
function walkBoundary(start_node,end_node,next){var siblingName=next?'nextSibling':'previousSibling';for(node=start_node,parent=node.parentNode;node&&node!=end_node;node=parent){parent=node.parentNode;siblings=collectSiblings(node==start_node?node:node[siblingName],siblingName);if(siblings.length){if(!next){siblings.reverse();}
callback(exclude(siblings));}}}
if(startContainer.nodeType==1&&startContainer.hasChildNodes()){startContainer=startContainer.childNodes[startOffset];}
if(endContainer.nodeType==1&&endContainer.hasChildNodes()){endContainer=getEndChild(endContainer,endOffset);}
if(startContainer==endContainer){return callback(exclude([startContainer]));}
ancestor=dom.findCommonAncestor(startContainer,endContainer);for(node=startContainer;node;node=node.parentNode){if(node===endContainer){return walkBoundary(startContainer,ancestor,true);}
if(node===ancestor){break;}}
for(node=endContainer;node;node=node.parentNode){if(node===startContainer){return walkBoundary(endContainer,ancestor);}
if(node===ancestor){break;}}
startPoint=findEndPoint(startContainer,ancestor)||startContainer;endPoint=findEndPoint(endContainer,ancestor)||endContainer;walkBoundary(startContainer,startPoint,true);siblings=collectSiblings(startPoint==startContainer?startPoint:startPoint.nextSibling,'nextSibling',endPoint==endContainer?endPoint.nextSibling:endPoint);if(siblings.length){callback(exclude(siblings));}
walkBoundary(endContainer,endPoint);};this.split=function(rng){var startContainer=rng.startContainer,startOffset=rng.startOffset,endContainer=rng.endContainer,endOffset=rng.endOffset;function splitText(node,offset){return node.splitText(offset);}
if(startContainer==endContainer&&startContainer.nodeType==3){if(startOffset>0&&startOffset<startContainer.nodeValue.length){endContainer=splitText(startContainer,startOffset);startContainer=endContainer.previousSibling;if(endOffset>startOffset){endOffset=endOffset-startOffset;startContainer=endContainer=splitText(endContainer,endOffset).previousSibling;endOffset=endContainer.nodeValue.length;startOffset=0;}else{endOffset=0;}}}else{if(startContainer.nodeType==3&&startOffset>0&&startOffset<startContainer.nodeValue.length){startContainer=splitText(startContainer,startOffset);startOffset=0;}
if(endContainer.nodeType==3&&endOffset>0&&endOffset<endContainer.nodeValue.length){endContainer=splitText(endContainer,endOffset).previousSibling;endOffset=endContainer.nodeValue.length;}}
return{startContainer:startContainer,startOffset:startOffset,endContainer:endContainer,endOffset:endOffset};};this.normalize=function(rng){var normalized,collapsed;function normalizeEndPoint(start){var container,offset,walker,body=dom.getRoot(),node,nonEmptyElementsMap;var directionLeft,isAfterNode;function hasBrBeforeAfter(node,left){var walker=new TreeWalker(node,dom.getParent(node.parentNode,dom.isBlock)||body);while((node=walker[left?'prev':'next']())){if(node.nodeName==="BR"){return true;}}}
function isPrevNode(node,name){return node.previousSibling&&node.previousSibling.nodeName==name;}
function findTextNodeRelative(left,startNode){var walker,lastInlineElement,parentBlockContainer;startNode=startNode||container;parentBlockContainer=dom.getParent(startNode.parentNode,dom.isBlock)||body;if(left&&startNode.nodeName=='BR'&&isAfterNode&&dom.isEmpty(parentBlockContainer)){container=startNode.parentNode;offset=dom.nodeIndex(startNode);normalized=true;return;}
walker=new TreeWalker(startNode,parentBlockContainer);while((node=walker[left?'prev':'next']())){if(dom.getContentEditableParent(node)==="false"){return;}
if(node.nodeType===3&&node.nodeValue.length>0){container=node;offset=left?node.nodeValue.length:0;normalized=true;return;}
if(dom.isBlock(node)||nonEmptyElementsMap[node.nodeName.toLowerCase()]){return;}
lastInlineElement=node;}
if(collapsed&&lastInlineElement){container=lastInlineElement;normalized=true;offset=0;}}
container=rng[(start?'start':'end')+'Container'];offset=rng[(start?'start':'end')+'Offset'];isAfterNode=container.nodeType==1&&offset===container.childNodes.length;nonEmptyElementsMap=dom.schema.getNonEmptyElements();directionLeft=start;if(container.nodeType==1&&offset>container.childNodes.length-1){directionLeft=false;}
if(container.nodeType===9){container=dom.getRoot();offset=0;}
if(container===body){if(directionLeft){node=container.childNodes[offset>0?offset-1:0];if(node){if(nonEmptyElementsMap[node.nodeName]||node.nodeName=="TABLE"){return;}}}
if(container.hasChildNodes()){offset=Math.min(!directionLeft&&offset>0?offset-1:offset,container.childNodes.length-1);container=container.childNodes[offset];offset=0;if(container.hasChildNodes()&&!/TABLE/.test(container.nodeName)){node=container;walker=new TreeWalker(container,body);do{if(node.nodeType===3&&node.nodeValue.length>0){offset=directionLeft?0:node.nodeValue.length;container=node;normalized=true;break;}
if(nonEmptyElementsMap[node.nodeName.toLowerCase()]){offset=dom.nodeIndex(node);container=node.parentNode;if(node.nodeName=="IMG"&&!directionLeft){offset++;}
normalized=true;break;}}while((node=(directionLeft?walker.next():walker.prev())));}}}
if(collapsed){if(container.nodeType===3&&offset===0){findTextNodeRelative(true);}
if(container.nodeType===1){node=container.childNodes[offset];if(!node){node=container.childNodes[offset-1];}
if(node&&node.nodeName==='BR'&&!isPrevNode(node,'A')&&!hasBrBeforeAfter(node)&&!hasBrBeforeAfter(node,true)){findTextNodeRelative(true,node);}}}
if(directionLeft&&!collapsed&&container.nodeType===3&&offset===container.nodeValue.length){findTextNodeRelative(false);}
if(normalized){rng['set'+(start?'Start':'End')](container,offset);}}
collapsed=rng.collapsed;normalizeEndPoint(true);if(!collapsed){normalizeEndPoint();}
if(normalized&&collapsed){rng.collapse(true);}
return normalized;};}
RangeUtils.compareRanges=function(rng1,rng2){if(rng1&&rng2){if(rng1.item||rng1.duplicate){if(rng1.item&&rng2.item&&rng1.item(0)===rng2.item(0)){return true;}
if(rng1.isEqual&&rng2.isEqual&&rng2.isEqual(rng1)){return true;}}else{return rng1.startContainer==rng2.startContainer&&rng1.startOffset==rng2.startOffset;}}
return false;};return RangeUtils;});