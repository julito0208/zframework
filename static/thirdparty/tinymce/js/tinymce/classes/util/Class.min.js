
define("tinymce/util/Class",["tinymce/util/Tools"],function(Tools){var each=Tools.each,extend=Tools.extend;var extendClass,initializing;function Class(){}
Class.extend=extendClass=function(prop){var self=this,_super=self.prototype,prototype,name,member;function Class(){var i,mixins,mixin,self=this;if(!initializing){if(self.init){self.init.apply(self,arguments);}
mixins=self.Mixins;if(mixins){i=mixins.length;while(i--){mixin=mixins[i];if(mixin.init){mixin.init.apply(self,arguments);}}}}}
function dummy(){return this;}
function createMethod(name,fn){return function(){var self=this,tmp=self._super,ret;self._super=_super[name];ret=fn.apply(self,arguments);self._super=tmp;return ret;};}
initializing=true;prototype=new self();initializing=false;if(prop.Mixins){each(prop.Mixins,function(mixin){mixin=mixin;for(var name in mixin){if(name!=="init"){prop[name]=mixin[name];}}});if(_super.Mixins){prop.Mixins=_super.Mixins.concat(prop.Mixins);}}
if(prop.Methods){each(prop.Methods.split(','),function(name){prop[name]=dummy;});}
if(prop.Properties){each(prop.Properties.split(','),function(name){var fieldName='_'+name;prop[name]=function(value){var self=this,undef;if(value!==undef){self[fieldName]=value;return self;}
return self[fieldName];};});}
if(prop.Statics){each(prop.Statics,function(func,name){Class[name]=func;});}
if(prop.Defaults&&_super.Defaults){prop.Defaults=extend({},_super.Defaults,prop.Defaults);}
for(name in prop){member=prop[name];if(typeof member=="function"&&_super[name]){prototype[name]=createMethod(name,member);}else{prototype[name]=member;}}
Class.prototype=prototype;Class.constructor=Class;Class.extend=extendClass;return Class;};return Class;});