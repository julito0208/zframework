
define("tinymce/util/EventDispatcher",["tinymce/util/Tools"],function(Tools){var nativeEvents=Tools.makeMap("focus blur focusin focusout click dblclick mousedown mouseup mousemove mouseover beforepaste paste cut copy selectionchange "+"mouseout mouseenter mouseleave wheel keydown keypress keyup input contextmenu dragstart dragend dragover "+"draggesture dragdrop drop drag submit "+"compositionstart compositionend compositionupdate touchstart touchend",' ');function Dispatcher(settings){var self=this,scope,bindings={},toggleEvent;function returnFalse(){return false;}
function returnTrue(){return true;}
settings=settings||{};scope=settings.scope||self;toggleEvent=settings.toggleEvent||returnFalse;function fire(name,args){var handlers,i,l,callback;name=name.toLowerCase();args=args||{};args.type=name;if(!args.target){args.target=scope;}
if(!args.preventDefault){args.preventDefault=function(){args.isDefaultPrevented=returnTrue;};args.stopPropagation=function(){args.isPropagationStopped=returnTrue;};args.stopImmediatePropagation=function(){args.isImmediatePropagationStopped=returnTrue;};args.isDefaultPrevented=returnFalse;args.isPropagationStopped=returnFalse;args.isImmediatePropagationStopped=returnFalse;}
if(settings.beforeFire){settings.beforeFire(args);}
handlers=bindings[name];if(handlers){for(i=0,l=handlers.length;i<l;i++){handlers[i]=callback=handlers[i];if(callback.once){off(name,callback);}
if(args.isImmediatePropagationStopped()){args.stopPropagation();return args;}
if(callback.call(scope,args)===false){args.preventDefault();return args;}}}
return args;}
function on(name,callback,prepend){var handlers,names,i;if(callback===false){callback=returnFalse;}
if(callback){names=name.toLowerCase().split(' ');i=names.length;while(i--){name=names[i];handlers=bindings[name];if(!handlers){handlers=bindings[name]=[];toggleEvent(name,true);}
if(prepend){handlers.unshift(callback);}else{handlers.push(callback);}}}
return self;}
function off(name,callback){var i,handlers,bindingName,names,hi;if(name){names=name.toLowerCase().split(' ');i=names.length;while(i--){name=names[i];handlers=bindings[name];if(!name){for(bindingName in bindings){toggleEvent(bindingName,false);delete bindings[bindingName];}
return self;}
if(handlers){if(!callback){handlers.length=0;}else{hi=handlers.length;while(hi--){if(handlers[hi]===callback){handlers=handlers.slice(0,hi).concat(handlers.slice(hi+1));bindings[name]=handlers;}}}
if(!handlers.length){toggleEvent(name,false);delete bindings[name];}}}}else{for(name in bindings){toggleEvent(name,false);}
bindings={};}
return self;}
function once(name,callback,prepend){callback.once=true;return on(name,callback,prepend);}
function has(name){name=name.toLowerCase();return!(!bindings[name]||bindings[name].length===0);}
self.fire=fire;self.on=on;self.off=off;self.once=once;self.has=has;}
Dispatcher.isNative=function(name){return!!nativeEvents[name.toLowerCase()];};return Dispatcher;});