
define("tinymce/EditorObservable",["tinymce/util/Observable","tinymce/dom/DOMUtils","tinymce/util/Tools"],function(Observable,DOMUtils,Tools){var DOM=DOMUtils.DOM,customEventRootDelegates;function getEventTarget(editor,eventName){if(eventName=='selectionchange'){return editor.getDoc();}
if(!editor.inline&&/^mouse|click|contextmenu|drop|dragover|dragend/.test(eventName)){return editor.getDoc().documentElement;}
if(editor.settings.event_root){if(!editor.eventRoot){editor.eventRoot=DOM.select(editor.settings.event_root)[0];}
return editor.eventRoot;}
return editor.getBody();}
function bindEventDelegate(editor,eventName){var eventRootElm=getEventTarget(editor,eventName),delegate;if(!editor.delegates){editor.delegates={};}
if(editor.delegates[eventName]){return;}
if(editor.settings.event_root){if(!customEventRootDelegates){customEventRootDelegates={};editor.editorManager.on('removeEditor',function(){var name;if(!editor.editorManager.activeEditor){if(customEventRootDelegates){for(name in customEventRootDelegates){editor.dom.unbind(getEventTarget(editor,name));}
customEventRootDelegates=null;}}});}
if(customEventRootDelegates[eventName]){return;}
delegate=function(e){var target=e.target,editors=editor.editorManager.editors,i=editors.length;while(i--){var body=editors[i].getBody();if(body===target||DOM.isChildOf(target,body)){if(!editors[i].hidden){editors[i].fire(eventName,e);}}}};customEventRootDelegates[eventName]=delegate;DOM.bind(eventRootElm,eventName,delegate);}else{delegate=function(e){if(!editor.hidden){editor.fire(eventName,e);}};DOM.bind(eventRootElm,eventName,delegate);editor.delegates[eventName]=delegate;}}
var EditorObservable={bindPendingEventDelegates:function(){var self=this;Tools.each(self._pendingNativeEvents,function(name){bindEventDelegate(self,name);});},toggleNativeEvent:function(name,state){var self=this;if(self.settings.readonly){return;}
if(name=="focus"||name=="blur"){return;}
if(state){if(self.initialized){bindEventDelegate(self,name);}else{if(!self._pendingNativeEvents){self._pendingNativeEvents=[name];}else{self._pendingNativeEvents.push(name);}}}else if(self.initialized){self.dom.unbind(getEventTarget(self,name),name,self.delegates[name]);delete self.delegates[name];}},unbindAllNativeEvents:function(){var self=this,name;if(self.delegates){for(name in self.delegates){self.dom.unbind(getEventTarget(self,name),name,self.delegates[name]);}
delete self.delegates;}
if(!self.inline){self.getBody().onload=null;self.dom.unbind(self.getWin());self.dom.unbind(self.getDoc());}
self.dom.unbind(self.getBody());self.dom.unbind(self.getContainer());}};EditorObservable=Tools.extend({},Observable,EditorObservable);return EditorObservable;});